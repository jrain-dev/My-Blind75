class ListNode:
    def __init__(self, val=0, next=None):
        self.val = val
        self.next = next

class Solution:
    def reverseList(self, head: Optional[ListNode]) -> Optional[ListNode]:
        
        if head is None:
            return None
        
        newList = []
        revList = [] 
        
        while head:
            newList.append(head.val)
            head = head.next
        
        for n in newList[:]:
            revList.append(newList[-1])
            newList.pop()

        #THIS ONE RIGHT HERE
        head = ListNode(revList[0])
        
        current = head

        for n in revList[1:]:
            current.next = ListNode(n)
            current = current.next

        return head
